@* Copyright 2021 Carnegie Mellon University. All Rights Reserved. See LICENSE.md file for terms. *@

@using Seer.Infrastructure.Enums
@model Seer.Infrastructure.ViewModels.GroupViewModel

@using (Html.BeginForm())
{
    <div class="pull-right">
    <a href="/admin/groups">Back to List</a> &nbsp; <input type="submit" value="Save" class="btn btn-primary" />
</div>
    <h2>Edit Group @Model.Group.Name</h2>
    <br />

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Group.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Group.Name, new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(model => model.Group.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Group.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Group.Designation, new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(model => model.Group.Designation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Group.Designation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Group.Brigade, new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(model => model.Group.Brigade, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Group.Brigade, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Group.Theatre, new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(model => model.Group.Theatre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Group.Theatre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Group.SignalCorp, new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(model => model.Group.SignalCorp, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Group.SignalCorp, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Group.Status, new { @class = "control-label col-md-2" })
        <div>

            <select name="Group.Status" class="form-control">
                <option value="0" @if (Model.Group.Status == ActiveStatus.Inactive) {<text>selected='selected'</text>}>Inactive</option>
                <option value="1" @if (Model.Group.Status == ActiveStatus.Active) {<text>selected='selected'</text>}>Active</option>
            </select>
        </div>
    </div>
    <br />
    <div class="form-group">
        <div>
            <h3>This group has the following events:</h3>
            <br />
            @if (Model.Assessments.Count < 1)
                {
                    <p>There are no events associated with this group</p>
                    <br />
                }
                else
                {
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th width="25%">Name</th>
                                <th>Status</th>
                                <th class="text-right">Created</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var o in Model.Assessments)
                            {
                                <tr>
                                    <td><a href="@Url.Action("Set", "Assessments", new {id = o.Id})">@o.Name</a></td>
                                    <td>@o.Status</td>
                                    <td class="text-right">@o.Created</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
        <br />
        <div class="form-group">
            <div>
                <h3>This group has the following users:</h3>
                <br />
                <table class="table table-sm">
                    <thead>
                        <tr>
                            <th width="25%">Name</th>
                            <th>Email</th>
                            <th>Username</th>
                            <th class="text-right">Created</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var o in Model.Users)
                        {
                            <tr>
                                <td><a href="@Url.Action("Edit", "Users", new { id = o.Id })">@o.FirstName @o.LastName</a></td>
                                <td>@o.Email</td>
                                <td>@o.UserName</td>
                                <td class="text-right">@o.Created</td>
                            </tr>

                        }
                    </tbody>
                </table>
                @if (Model.Users.Count < 1)
                {
                    <div>There are no users associated with this group</div>
                }
            </div>
        </div>
    </div>
}
