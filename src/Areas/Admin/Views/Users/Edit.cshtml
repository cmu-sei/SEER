@* Copyright 2021 Carnegie Mellon University. All Rights Reserved. See LICENSE.md file for terms. *@

@model Seer.Infrastructure.ViewModels.UserViewModel

@{
    ViewBag.Title = "Edit User";
}

<style>
    #roles_current {
        list-style: none;
        padding-left: 0;
    }

    #roles_current li {
        float: left;
        margin: 0 15px
    }
</style>

@using (Html.BeginForm())
{

    <div class="pull-right">
    <a href="/admin/users">Back to List</a> &nbsp; <input type="submit" value="Save" class="btn btn-primary" />
</div>
    <h2>Edit user @Model.FirstName @Model.LastName</h2>
    <hr />

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Role, new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Id, new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rank, new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(model => model.Rank, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Rank, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DutyPosition, new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(model => model.DutyPosition, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DutyPosition, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Created, new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <div class="form-group">
        <p class="bold">Groups:</p>
        <div style="padding-left:10px;">
            @foreach (var group in Model.Groups.OrderBy(x => x.Name))
                {
                    <a href="@Url.Action("Edit", "Groups", new {id = group.Id})">
                        @group.Name
                    </a>
                    <a href="#" class="btn btn-link group_remove" title="Remove from group" data-href="/api/groups/@group.Id/users/@Model.Id/delete">
                        <i class="fa fa-trash" aria-hidden="true"></i>
                    </a>
                }
                @if (!Model.Groups.Any())
                {
                    <div>No group associations found</div>
                }
            </div>
            <div class="row" style="margin:30px 0">
                <div class="col col-2">
                    Add to group:
                </div>
                <div class="col col-9">
                    <select id="groups_add" class="form-control"></select>
                </div>
                <div class="col col-1">
                    <a href="#" class="btn btn-link" title="Add to group" id="groups_add_btn" data-controlid="groups_add" data-href="/api/groups/{groupId}/users/@Model.Id">
                        <i class="fa fa-save" aria-hidden="true"></i>
                    </a>
                </div>
            </div>
        </div>
        <div class="form-group">
            <p class="bold">Roles:</p>
            <div>
                <ul id="roles_current"></ul>
            </div>
            <br />
            <div class="row clearfix" style="margin:30px 0">
                <div class="col col-2">
                    Add role:
                </div>
                <div class="col col-9">
                    <select id="roles_add" class="form-control"></select>
                </div>
                <div class="col col-1">
                    <a href="#" class="btn btn-link" title="Add to role" id="roles_add_btn" data-controlid="roles_add" data-href="/api/users/@Model.Id/roles/{role}">
                        <i class="fa fa-save" aria-hidden="true"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
<script>
    $(function () {
        $.ajax({
            type: "GET",
            url: "/api/groups",
            contentType: "application/json",
            success: function (result) {
                $.each(result, function (index, value) {
                    $('#groups_add').append('<option value="' + value.id + '">' + value.name + '</option>');
                });
            },
            error: function () {
                alert("Sorry, the data gave us a hard time")
            }
        });
        $.ajax({
            type: "GET",
            url: "/api/users/@Model.Id/roles",
            contentType: "application/json",
            success: function (result) {
                console.log(result)
                if (result === undefined || result.length === 0) {
                    $('#roles_current').append('<li>User not assigned any specific role</li>');
                }
                $.each(result, function (index, value) {
                    $('#roles_current').append('<li>' + value + ' <a href="#" class="btn btn-link role_remove" title="Remove from group" data-href="/api/users/@Model.Id/roles/' + value + '/delete"><i class="fa fa-trash" aria-hidden="true"></i></a></li>');
                });
            },
            error: function () {
                alert("Sorry, the data gave us a hard time")
            }
        });
        $.ajax({
            type: "GET",
            url: "/api/roles",
            contentType: "application/json",
            success: function (result) {
                $.each(result, function (index, value) {
                    $('#roles_add').append('<option value="' + value + '">' + value + '</option>');
                });
            },
            error: function () {
                alert("Sorry, the data gave us a hard time")
            }
        });
        $('#roles_add_btn').click(function () {
            let role = $("#" + this.dataset.controlid).val();
            let url = this.dataset.href.replace("{role}", role);
            $.ajax({
                type: "POST",
                url: url,
                contentType: "application/json",
                success: function () {
                    window.location.reload(false);
                },
                error: function () {
                    alert("Sorry, the data could not be saved")
                }
            });
        });
        $('#groups_add_btn').click(function () {
            let group_id = $("#" + this.dataset.controlid).val();
            let url = this.dataset.href.replace("{groupId}", group_id);
            $.ajax({
                type: "POST",
                url: url,
                contentType: "application/json",
                success: function () {
                    window.location.reload(false);
                },
                error: function () {
                    alert("Sorry, the data could not be saved")
                }
            });
        });
        $('.group_remove').click(function () {
            $.ajax({
                type: "POST",
                url: this.dataset.href,
                contentType: "application/json",
                success: function () {
                    window.location.reload(false);
                },
                error: function () {
                    alert("Sorry, the data could not be saved")
                }
            });
        });
        $('body').on('click', '.role_remove', function () {
            console.log(this.dataset.href)
            $.ajax({
                type: "POST",
                url: this.dataset.href,
                contentType: "application/json",
                success: function () {
                    window.location.reload(false);
                },
                error: function () {
                    alert("Sorry, the data could not be saved")
                }
            });
        });
    });
</script>
}